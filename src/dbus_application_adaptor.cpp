/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ../dbus/org.freedesktop.Application.xml -a dbus_application_adaptor
 *
 * qdbusxml2cpp is Copyright (C) 2023 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "dbus_application_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class ApplicationAdaptor
 */

ApplicationAdaptor::ApplicationAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

ApplicationAdaptor::~ApplicationAdaptor()
{
    // destructor
}

void ApplicationAdaptor::Activate(const QVariantMap &platform_data)
{
    // handle method call org.freedesktop.Application.Activate
    QMetaObject::invokeMethod(parent(), "Activate", Q_ARG(QVariantMap, platform_data));
}

void ApplicationAdaptor::ActivateAction(const QString &action_name, const QVariantList &parameter, const QVariantMap &platform_data)
{
    // handle method call org.freedesktop.Application.ActivateAction
    QMetaObject::invokeMethod(parent(), "ActivateAction", Q_ARG(QString, action_name), Q_ARG(QVariantList, parameter), Q_ARG(QVariantMap, platform_data));
}

void ApplicationAdaptor::Open(const QStringList &uris, const QVariantMap &platform_data)
{
    // handle method call org.freedesktop.Application.Open
    QMetaObject::invokeMethod(parent(), "Open", Q_ARG(QStringList, uris), Q_ARG(QVariantMap, platform_data));
}

